apply plugin: 'com.android.application'

dependencies {
//    compile project(':vtm-android')
//    compile project(':vtm-themes')
//    compile project(':vtm-extras')
    //Mapsforge vtm online
    compile 'org.mapsforge:vtm-android:0.+'
    compile 'org.mapsforge:vtm-themes:0.+'
    compile 'org.mapsforge:vtm-extras:0.+'

    //causes problems with staticlogger
//    compile ('com.noveogroup.android:android-logger:1.+'){
//        exclude module: 'support-v4'
//    }
    compile ('com.squareup.okhttp3:okhttp:3.+'){
        exclude module: 'support-v4'
    }
    compile 'com.android.support:support-v4:25.+'
    compile 'com.android.support:appcompat-v7:25.+'
    compile 'com.android.support:design:25.+'
    compile 'com.android.support.constraint:constraint-layout:1.0.1'
    //Graphhopper
    compile 'com.graphhopper:graphhopper-core:0.+'
    compile 'com.graphhopper:graphhopper-reader-osm:0.+'
    //compile 'com.graphhopper:graphhopper-reader-overlay-data:0.+'
    //TreeView helper
    compile 'com.github.bmelnychuk:atv:1.2.+'
    compile 'com.github.johnkil.print:print:1.3.1'
}

android {
    compileSdkVersion androidCompileSdk()
    buildToolsVersion "$androidBuildVersionTools"

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    defaultConfig {
        versionCode versionCode()
        versionName versionName()
        minSdkVersion androidMinSdk()

        multiDexEnabled true
    }

    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src']
            resources.srcDirs = ['src']
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']
            file("${rootDir}/vtm-android/natives").eachDir() { dir ->
                jniLibs.srcDirs += "${dir.path}/lib"
            }
        }
        debug.setRoot('build-types/debug')
        release.setRoot('build-types/release')
    }

    lintOptions {
//        abortOnError false
        disable 'InvalidPackage'
    }

    packagingOptions {
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/NOTICE'
    }
}
